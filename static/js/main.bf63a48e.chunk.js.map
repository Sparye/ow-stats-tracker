{"version":3,"sources":["Card.tsx","Dropdown.tsx","SelectPlayer.tsx","Banner.tsx","ModeSwitch.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","props","keys","Object","data","values","className","Container","Row","Col","map","key","heroName","Math","random","value","Dropdown","placeholder","options","label","onChange","e","console","log","setHeroName","setHeading","SelectPlayer","setPlayerName","Banner","Navbar","sticky","variant","Brand","ModeSwitch","useState","radioValue","setRadioValue","ButtonGroup","ToggleButton","id","type","checked","currentTarget","setCompMode","App","userData","setUserData","heading","playerName","heroData","setHeroData","isLoading","setIsLoading","compMode","useEffect","getStats","a","fetch","then","res","json","average","competitiveStats","careerStats","quickPlayStats","error","Spinner","animation","Alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf63a48e.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"./Card.css\";\n\ntype Props = {\n  data: string;\n  heroName: string;\n};\n\nconst Card: React.FC<Props> = (props) => {\n  //   console.log(props);\n  const keys = Object.keys(props.data);\n  const values = Object.values(props.data);\n  //   let obj = JSON.parse(props);\n  return (\n    <div className=\"block\">\n      <Container>\n        <Row>\n          <Col>\n            {keys.map((key) => {\n              return (\n                <div\n                  className=\"nameBlock\"\n                  key={key + props.heroName + Math.random()}\n                >\n                  {key}\n                </div>\n              );\n            })}\n          </Col>\n          <Col>\n            {values.map((value) => {\n              return (\n                <div\n                  className=\"valueBlock\"\n                  key={value + props.heroName + Math.random()}\n                >\n                  {value}\n                </div>\n              );\n            })}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n\n    // <div className=\"block\">\n    //   <div className=\"card\">\n    //     <div className=\"names\">\n    //       {keys.map((key) => {\n    //         return (\n    //           <div\n    //             className=\"nameBlock\"\n    //             key={key + props.heroName + Math.random()}\n    //           >\n    //             {key}\n    //           </div>\n    //         );\n    //       })}\n    //     </div>\n\n    //     <div className=\"values\">\n    //       {values.map((value) => {\n    //         return (\n    //           <div\n    //             className=\"valueBlock\"\n    //             key={value + props.heroName + Math.random()}\n    //           >\n    //             {value}\n    //           </div>\n    //         );\n    //       })}\n    //     </div>\n    //   </div>\n    // </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport \"./Dropdown.css\";\n\ntype Props = {\n  heroName: string;\n  setHeroName: (value: string) => void;\n  setHeading: (label: string) => void;\n};\n\nconst Dropdown: React.FC<Props> = (props) => {\n  var heroList = [\n    { value: \"zenyatta\", label: \"Zenyatta\" },\n    { value: \"roadhog\", label: \"Roadhog\" },\n    { value: \"bastion\", label: \"Bastion\" },\n    { value: \"dVa\", label: \"D.Va\" },\n    { value: \"genji\", label: \"Genji\" },\n    { value: \"hanzo\", label: \"Hanzo\" },\n    { value: \"junkrat\", label: \"Junkrat\" },\n    { value: \"lúcio\", label: \"Lúcio\" },\n    { value: \"mccree\", label: \"Mccree\" },\n    { value: \"mei\", label: \"Mei\" },\n    { value: \"mercy\", label: \"Mercy\" },\n    { value: \"orisa\", label: \"Orisa\" },\n    { value: \"pharah\", label: \"Pharah\" },\n    { value: \"reaper\", label: \"Reaper\" },\n    { value: \"reinhardt\", label: \"Reinhardt\" },\n    { value: \"soldier76\", label: \"Soldier 76\" },\n    { value: \"sombra\", label: \"Sombra\" },\n    { value: \"symmetra\", label: \"Symmetra\" },\n    { value: \"torbjörn\", label: \"Torbjörn\" },\n    { value: \"tracer\", label: \"Tracer\" },\n    { value: \"widowmaker\", label: \"Widowmaker\" },\n    { value: \"winston\", label: \"Winston\" },\n    { value: \"zarya\", label: \"Zarya\" },\n  ];\n  return (\n    <div className=\"container\">\n      <div className=\"dropdown\">\n        <Select\n          placeholder=\"Select Hero\"\n          options={heroList}\n          onChange={(e) => {\n            console.log(e);\n            props.setHeroName(e!.value);\n            props.setHeading(e!.label);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Dropdown;\n\n// export default function Dropdown() {\n\n//   return (\n//     <div>\n//       <Select options={heroList} />\n//     </div>\n//   );\n// }\n","import React from \"react\";\nimport Select from \"react-select\";\nimport \"./Dropdown.css\";\n\ntype Props = {\n  setPlayerName: (value: string) => void;\n  //   setHeading: (label: string) => void;\n};\n\nconst SelectPlayer: React.FC<Props> = (props) => {\n  var playerList = [\n    { value: \"JigglyPuff-11568\", label: \"JigglyPuff#11568\" },\n    { value: \"Luffy-12914\", label: \"Luffy#12914\" },\n  ];\n  return (\n    <div className=\"container\">\n      <div className=\"dropdown\">\n        <Select\n          placeholder=\"Select Player\"\n          options={playerList}\n          onChange={(e) => {\n            console.log(e);\n            props.setPlayerName(e!.value);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SelectPlayer;\n","import React from \"react\";\nimport { Navbar, Container } from \"react-bootstrap\";\nimport \"./Banner.css\";\n\nexport default function Banner() {\n  return (\n    <div>\n      <Navbar sticky=\"top\" className=\"nav\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand>Overwatch Stats Tracker</Navbar.Brand>\n        </Container>\n      </Navbar>\n    </div>\n  );\n}\n// bg=\"dark\" variant=\"light\"\n","import React, { useState, Dispatch, SetStateAction } from \"react\";\nimport \"./ModeSwitch.css\";\nimport { ButtonGroup, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\n\ntype Props = {\n  setCompMode: Dispatch<SetStateAction<boolean>>;\n};\n\nconst ModeSwitch: React.FC<Props> = (props) => {\n  const [radioValue, setRadioValue] = useState(\"1\");\n\n  return (\n    <div className=\"container\">\n      <ButtonGroup>\n        <ToggleButton\n          key=\"1\"\n          id=\"tbg-btn-1\"\n          type=\"radio\"\n          value=\"1\"\n          variant=\"outline-primary\"\n          checked={radioValue === \"1\"}\n          onChange={(e) => {\n            setRadioValue(e.currentTarget.value);\n            props.setCompMode(true);\n          }}\n        >\n          Competitive{\" \"}\n        </ToggleButton>\n        <ToggleButton\n          key=\"2\"\n          id=\"tbg-btn-2\"\n          type=\"radio\"\n          value=\"2\"\n          variant=\"outline-success\"\n          checked={radioValue === \"2\"}\n          onChange={(e) => {\n            setRadioValue(e.currentTarget.value);\n            props.setCompMode(false);\n          }}\n        >\n          Quick Play{\" \"}\n        </ToggleButton>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default ModeSwitch;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\nimport Dropdown from \"./Dropdown\";\nimport SelectPlayer from \"./SelectPlayer\";\nimport Banner from \"./Banner\";\nimport ModeSwitch from \"./ModeSwitch\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col, Alert, Spinner } from \"react-bootstrap\";\n\nfunction App() {\n  const [userData, setUserData] = useState<string>(\"\");\n  const [heroName, setHeroName] = useState<string>(\"zenyatta\");\n  const [heading, setHeading] = useState<string>(\"Zenyatta\");\n  const [playerName, setPlayerName] = useState<string>(\"JigglyPuff-11568\");\n  const [heroData, setHeroData] = useState<boolean>(true);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [compMode, setCompMode] = useState<boolean>(true);\n\n  useEffect(() => {\n    getStats();\n  }, [heroName, playerName, compMode]);\n\n  // const URLHead = \"https://ow-api.com/v1/stats/pc/us/JigglyPuff-11568/heroes/\";\n  const URLHead = \"https://ow-api.com/v1/stats/pc/us/\";\n\n  const getStats = async () => {\n    setIsLoading(true);\n    fetch(`${URLHead}${playerName}/heroes/${heroName}`)\n      .then((res) => {\n        // console.log(res);\n        return res.json();\n      })\n      .then((data) => {\n        console.log(data);\n        try {\n          if (compMode) {\n            const average = data.competitiveStats.careerStats[heroName].average;\n            const names = Object.keys(average);\n            setUserData(average);\n          } else {\n            const average = data.quickPlayStats.careerStats[heroName].average;\n            const names = Object.keys(average);\n            setUserData(average);\n          }\n\n          setHeroData(true);\n          setIsLoading(false);\n        } catch (error) {\n          setHeroData(false);\n          setIsLoading(false);\n          console.log(error);\n        }\n        // const average = data.competitiveStats.careerStats[heroName].average;\n        // const names = Object.keys(average);\n        // console.log(names);\n        // console.log(average);\n        // setUserData(average);\n        // setNameData(names);\n      });\n  };\n  // const resp nse = axios.get(apiURL);\n\n  return (\n    <div className=\"App\">\n      <Banner />\n      <ModeSwitch setCompMode={setCompMode} />\n      <h1>{heading}</h1>\n      <div className=\"selectContainer\">\n        <Container>\n          <Row>\n            <Col>\n              <SelectPlayer setPlayerName={setPlayerName} />\n            </Col>\n            <Col>\n              <Dropdown\n                heroName={heroName}\n                setHeroName={setHeroName}\n                setHeading={setHeading}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n\n      {isLoading ? (\n        <div className=\"spinner\">\n          <Spinner animation=\"border\"></Spinner>\n        </div>\n      ) : (\n        [\n          heroData ? (\n            <Card data={userData} heroName={heroName} />\n          ) : (\n            <div className=\"alert\">\n              <Alert key={\"warning\"} variant={\"warning\"}>\n                Not enough play time on the hero\n              </Alert>\n            </div>\n          ),\n        ]\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}